version: "2.2"

services:

  gateway:
    build: ./gateway
    links:
      - redis

  nginx-proxy:
    image: jwilder/nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./api/nginx/vhost.d:/etc/nginx/vhost.d"
      - "/usr/share/nginx/html"
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
      - "/etc/nginx/certs"

  letsencrypt-nginx-proxy-companion:
    image: jrcs/letsencrypt-nginx-proxy-companion
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    volumes_from:
      - "nginx-proxy"

  mongo:
    build: ./docker/mongo
    restart: always
    environment:
      - MONGODB_ADMIN_USER
      - MONGODB_ADMIN_PASS
      - MONGODB_APPLICATION_DATABASE
      - MONGODB_APPLICATION_USER
      - MONGODB_APPLICATION_PASS
    ports:
      - "27018:27017"
    volumes_from:
      - mongodata
    command: --auth

  mongodata:
    image: tianon/true
    volumes:
      - /data/db

  redis:
    image: redis:4.0.5-alpine
    restart: always
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  mongobackup:
    build: ./utilities/backup
    restart: always
    links:
      - mongo
    ports:
      - 27018
    environment:
      - MONGO_HOST
      - MONGO_DB
      - MONGO_PORT
      - S3_BUCKET
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - MONGODB_APPLICATION_USER
      - MONGODB_APPLICATION_PASS
      - BACKUP_TIME=00:00
      #- DATE_FORMAT
      #- FILE_PREFIX

volumes:
  redis-data:
